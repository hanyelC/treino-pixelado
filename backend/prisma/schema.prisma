// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // workoutPlans WorkoutPlan[]
}

model WorkoutPlan {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  img_url     String
  // isCustom    Boolean?
  // createdAt   DateTime? @default(now())
  // updatedAt   DateTime? @updatedAt
  // userId      Int?
  // user        User?     @relation(fields: [userId], references: [id])
  workouts    Workout[]
}

model Workout {
  id        Int       @id @default(autoincrement())
  name      String
  img_url   String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  workout_plan_id Int?
  workoutPlan     WorkoutPlan? @relation(fields: [workout_plan_id], references: [id], onDelete: Cascade) //review
  exercises       Exercise[]
}

model Exercise {
  id          Int       @id @default(autoincrement())
  name        String
  repetitions Int
  duration    Int
  gif_url     String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  workout_id Int?
  workout    Workout? @relation(fields: [workout_id], references: [id], onDelete: Cascade) //review
}
